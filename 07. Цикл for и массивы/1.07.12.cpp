#include <iostream>
#include <vector>

using namespace std;

// Решение не самое оптимальное
//
// Объявляю 3 целочисленные переменные, n - для хранения количества вводимых чисел, temp - для хранения элемента массива, cnt - счетчик одинаковых элементов.
// Объявлю 2 целочисленных массива: a - для вводимых чисел, res -  для хранения уникальных.
// Первым циклом for заполняю массив a.
// Вторым циклом for выполняю поиск с помощью вложенного цикла for одинаковых чисел в массиве a. При нахождении таких к cnt (который равен 0 и сбрасывается
// до 0 в каждой итерации верхнего цикла for.
// Для небольшой оптимизации использую ключевое слово break при нахождении 2 одинаковых чисел.
// После выхода из вложенного цикла, если счетчик cnt равен 0, то в массив res добавляю число с индексом a[i], где - i - индекс уникального числа в массиве a.
// После выхода из цикла, вхожу в новый, где поочередно вывожу найденный массив уникальных целых чисел.

int main() {
    int n, temp, cnt = 0;
    vector<int> a, res;
    cin >> n;
    for(int i = 0; i < n; ++i){
        cin >> temp;
        a.push_back(temp);
    }
    
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < n; ++j){
            if(a[i] == a[j]){
                ++cnt;
            }
            if(cnt == 2){
                break;
            }
        }
        if (cnt == 1){
            res.push_back(a[i]);
        }
        cnt = 0;
    }
    
    for(auto q : res){
        cout << q << " ";
    }    
  return 0;
}
