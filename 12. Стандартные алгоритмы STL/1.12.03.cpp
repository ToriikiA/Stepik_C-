#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// Для решения этой задачи создам булевую функцию-компаратор для функции sort;
// На вход подается 2 пары типа с 2 целыми числами в них
// В теле функции, если вторые значения (баллы) пар совпадают, то сравниваются первые значения (для вывода true первое значение первой пары должно быть меньше чем у второй)
// Иначе сравниваются вторые значения (для вывода true 2 значение второй пары должно быть больше первой).
// Таким образом сначала сортируем по баллам в порядке убывания, а если баллы равны, то сортируем по id в порядке возрастания
// В теле основной функции заполняю массив целочисленных пар
// Сортирую этот массив, используя функцию-компаратор (описана выше)
// Вывожу отсортированный массив на экран с помощью цикла for.

bool compare(pair<int,int> a, pair<int, int> b){
    if(a.second == b.second){
        return a.first < b.first;
    }
    else{
        return a.second > b.second;
    }
}

int main() {
  int n, id, score;
    vector<pair<int, int>> A;
    cin >> n;
    while(n--){
        cin >> id >> score;
        A.push_back({id, score});
    }
    sort(A.begin(), A.end(), compare);
    for(auto x : A){
        cout << x.first << " " << x.second << endl;
        
    }    
  return 0;
}
