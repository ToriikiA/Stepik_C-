#include <iostream>
#include <vector>
#include <iomanip>

using namespace std;

// Подключаю iomanip и использую команду setw(4) по той же причине, что и в предыдущей задаче.
// Создаю 4 целочисленных переменных: n, m - для хранения размеров массива; diags - для хранения вычисленного кол-ва диагоналей матрицы; cnt = 1 - счетчик для заполнения массива.
// Ввожу n, m.
// Создаю двумерный целочисленный массив A с размерами nxm.
// Далее приступаю к его заполнению.
// 1 цикл for - считает текущую диагональ матрицы
// 2 цикл for - вложен в 1, считает текущую строку матрицы
// 3 цикл for - вложен во 2, считает текущий столбец матрицы
// Если в 3 цикле, индекс строки i равен разности индекса диагонали и индекса столбца или индекс столбца равен разности индексов диагонали и строки, то в элемент A[i][j] вставляю значение cnt, а после прибавляю к cnt 1.
// После заполнения, вывожу массив на экран, консоль, etc...

int main() {
  int n, m, diags, cnt = 1;
    cin >> n >> m;
    diags = n + m - 1;
    vector<vector<int>> A(n, vector<int>(m));
    for(int q = 0; q < diags; ++q){
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < m; ++j){
                if((i == q - j) || (j == q - i)){
                    A[i][j] = cnt;
                    ++cnt;
                }
            }
        }
    }
    
    for(auto x : A){
        for(auto y: x){
            cout << setw(4) << y;
        }
        cout << "\n";
    }
        
  return 0;
}
